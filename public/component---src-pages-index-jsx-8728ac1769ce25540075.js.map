{"version":3,"sources":["webpack:///./src/pages/index.jsx"],"names":["Hero","props","theme","colors","greyLight","HeroInner","Wrapper","breakpoints","l","m","s","HeroText","Social","greyDark","primary","ProjectListing","black","IndexWrapper","withComponent","Index","render","this","data","homepage","social","posts","projects","title","text","dangerouslySetInnerHTML","__html","content","html","nodes","map","index","data-name","key","label","href","link","url","id","website","skipNavId","style","paddingTop","paddingBottom","marginTop","project","Component"],"mappings":"uLAOMA,EAAI,+DACY,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,YAD1C,qCAMJC,EAAY,YAAOC,IAAP,qBAAH,oFAMQ,SAACL,GAAD,OAAWA,EAAMC,MAAMK,YAAYC,IAN3C,gEAUQ,SAACP,GAAD,OAAWA,EAAMC,MAAMK,YAAYE,IAV3C,8DAcQ,SAACR,GAAD,OAAWA,EAAMC,MAAMK,YAAYG,IAd3C,4CAoBTC,EAAQ,iHAIS,SAACV,GAAD,OAAWA,EAAMC,MAAMK,YAAYE,IAJ5C,0CAOS,SAACR,GAAD,OAAWA,EAAMC,MAAMK,YAAYG,IAP5C,yBAYRE,EAAM,+WAWe,SAACX,GAAD,OAAWA,EAAMC,MAAMK,YAAYG,IAXlD,sDAiBG,SAACT,GAAD,OAAWA,EAAMC,MAAMC,OAAOU,WAjBjC,8DAsBK,SAACZ,GAAD,OAAWA,EAAMC,MAAMC,OAAOW,UAtBnC,6CAyBe,SAACb,GAAD,OAAWA,EAAMC,MAAMK,YAAYG,IAzBlD,0BAgCNK,EAAc,mKASL,SAACd,GAAD,OAAWA,EAAMC,MAAMC,OAAOa,QATzB,uBAUO,SAACf,GAAD,OAAWA,EAAMC,MAAMK,YAAYG,IAV1C,4BAiBdO,EAAeX,IAAQY,cAAc,OAAtB,qBAEfC,E,kGACJC,OAAA,WAAU,IAAD,EAGHC,KAAKpB,MADPqB,KAAQC,EAFH,EAEGA,SAAUC,EAFb,EAEaA,OAAQC,EAFrB,EAEqBA,MAAOC,EAF5B,EAE4BA,SAEnC,OACE,YAAC,IAAD,KACE,YAAC1B,EAAD,KACE,YAACK,EAAD,KACE,sBAAKkB,EAASD,KAAKK,MAAMC,MACzB,YAACjB,EAAD,CAAUkB,wBAAyB,CAAEC,OAAQP,EAASD,KAAKS,QAAQC,QACnE,YAACpB,EAAD,KACGY,EAAOS,MAAMC,KAAI,SAACxB,EAAGyB,GAAJ,OAChB,kBAAIC,YAAA,gBAA2BD,EAASE,IAAK3B,EAAEI,QAAQwB,MAAMV,MAC3D,iBAAGW,KAAM7B,EAAEI,QAAQ0B,KAAKC,KAAM/B,EAAEI,QAAQwB,MAAMV,aAMxD,YAACX,EAAD,CAAcyB,GAAIC,IAAQC,UAAWC,MAAO,CAAEC,WAAY,OAAQC,cAAe,SAC/E,YAAC,IAAD,CAAOF,MAAO,CAAEG,UAAW,SAA3B,gBACA,YAAC,IAAD,CAASvB,MAAOA,EAAMQ,QACtB,YAAC,IAAD,CAAOY,MAAO,CAAEG,UAAW,SAA3B,mBACA,YAACjC,EAAD,KACGW,EAASO,MAAMC,KAAI,SAACe,GAAD,OAClB,kBAAIZ,IAAKY,EAAQnC,QAAQwB,MAAMV,MAC7B,iBAAGW,KAAMU,EAAQnC,QAAQ0B,KAAKC,KAAMQ,EAAQnC,QAAQwB,MAAMV,c,GA3BtDsB,aAqCL/B","file":"component---src-pages-index-jsx-8728ac1769ce25540075.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { graphql } from 'gatsby'\nimport { Layout, Listing, Wrapper, Title } from '../components'\nimport website from '../../config/website'\n\nconst Hero = styled.header`\n  background-color: ${(props) => props.theme.colors.greyLight};\n  display: flex;\n  align-items: center;\n`\n\nconst HeroInner = styled(Wrapper)`\n  padding-top: 13rem;\n  padding-bottom: 13rem;\n  h1 {\n    margin-bottom: 2rem;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.l}) {\n    padding-top: 10rem;\n    padding-bottom: 10rem;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    padding-top: 8rem;\n    padding-bottom: 8rem;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    padding-top: 6rem;\n    padding-bottom: 6rem;\n  }\n`\n\nconst HeroText = styled.div`\n  font-size: 1.7rem;\n  line-height: 1.4;\n  margin-bottom: 2rem;\n  @media (max-width: ${(props) => props.theme.breakpoints.m}) {\n    font-size: 1.4rem;\n  }\n  @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n    font-size: 1.25rem;\n  }\n`\n\nconst Social = styled.ul`\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 0;\n  font-family: 'Source Sans Pro', -apple-system, 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Helvetica', 'Arial',\n    sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n  li {\n    display: inline;\n    &:not([data-name='social-entry-0']) {\n      margin-left: 2.5rem;\n      @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n        margin-left: 1.75rem;\n      }\n    }\n    a {\n      font-style: normal;\n      color: ${(props) => props.theme.colors.greyDark};\n      font-size: 1.333rem;\n      font-weight: 600;\n      &:hover,\n      &:focus {\n        color: ${(props) => props.theme.colors.primary};\n        text-decoration: none;\n      }\n      @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n        font-size: 1.2rem;\n      }\n    }\n  }\n`\n\nconst ProjectListing = styled.ul`\n  list-style-type: none;\n  margin-left: 0;\n  margin-top: 4rem;\n  li {\n    margin-bottom: 1.45rem;\n    a {\n      font-size: 2.369rem;\n      font-style: normal;\n      color: ${(props) => props.theme.colors.black};\n      @media (max-width: ${(props) => props.theme.breakpoints.s}) {\n        font-size: 1.777rem;\n      }\n    }\n  }\n`\n\nconst IndexWrapper = Wrapper.withComponent('main')\n\nclass Index extends Component {\n  render() {\n    const {\n      data: { homepage, social, posts, projects },\n    } = this.props\n    return (\n      <Layout>\n        <Hero>\n          <HeroInner>\n            <h1>{homepage.data.title.text}</h1>\n            <HeroText dangerouslySetInnerHTML={{ __html: homepage.data.content.html }} />\n            <Social>\n              {social.nodes.map((s, index) => (\n                <li data-name={`social-entry-${index}`} key={s.primary.label.text}>\n                  <a href={s.primary.link.url}>{s.primary.label.text}</a>\n                </li>\n              ))}\n            </Social>\n          </HeroInner>\n        </Hero>\n        <IndexWrapper id={website.skipNavId} style={{ paddingTop: '2rem', paddingBottom: '2rem' }}>\n          <Title style={{ marginTop: '4rem' }}>Recent posts</Title>\n          <Listing posts={posts.nodes} />\n          <Title style={{ marginTop: '8rem' }}>Recent projects</Title>\n          <ProjectListing>\n            {projects.nodes.map((project) => (\n              <li key={project.primary.label.text}>\n                <a href={project.primary.link.url}>{project.primary.label.text}</a>\n              </li>\n            ))}\n          </ProjectListing>\n        </IndexWrapper>\n      </Layout>\n    )\n  }\n}\n\nexport default Index\n\nIndex.propTypes = {\n  data: PropTypes.shape({\n    homepage: PropTypes.shape({\n      data: PropTypes.shape({\n        title: PropTypes.shape({\n          text: PropTypes.string.isRequired,\n        }),\n        content: PropTypes.shape({\n          html: PropTypes.string.isRequired,\n        }),\n      }),\n    }),\n    social: PropTypes.shape({\n      nodes: PropTypes.array.isRequired,\n    }),\n    posts: PropTypes.shape({\n      nodes: PropTypes.array.isRequired,\n    }),\n    projects: PropTypes.shape({\n      nodes: PropTypes.array.isRequired,\n    }),\n  }).isRequired,\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    homepage: prismicHomepage {\n      data {\n        title {\n          text\n        }\n        content {\n          html\n        }\n      }\n    }\n    social: allPrismicHeroLinksBodyLinkItem {\n      nodes {\n        primary {\n          label {\n            text\n          }\n          link {\n            url\n          }\n        }\n      }\n    }\n    posts: allPrismicPost(sort: { fields: [data___date], order: DESC }) {\n      nodes {\n        uid\n        data {\n          title {\n            text\n          }\n          date(formatString: \"DD.MM.YYYY\")\n          categories {\n            category {\n              document {\n                data {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    projects: allPrismicProjectsBodyLinkItem {\n      nodes {\n        primary {\n          label {\n            text\n          }\n          link {\n            url\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}